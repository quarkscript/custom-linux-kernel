#!/bin/bash
## Tune cpu.patch to local hw
## Req: grep, gcc, sed, lscpu, hash, sha512sum,
##                    /proc/cpuinfo, cpu.patch
## Use: ./localcpu
## Author Andrew S.
## Licence GPL
## Tested on Arch Linux and Linux Kernel source 4.14.3
## https://github.com/quarkscript/linux-kernel-cpu-patch

if [ ! -e "cpu.patch" ]
    then
    echo -------------------
    echo cpu.patch not found
    echo nothing to tune
    echo -------------------
elif ! (hash gcc 2>/dev/null)
    then
    echo -------------------
    echo gcc not found, exit
    echo -------------------
elif [ -e "localcpu.patch" ]
    then
    echo ---------------------------
    echo localcpu.patch is present
    echo Tunning will not run
    echo 
    echo to gen a new localcpu.patch
    echo you must remove existing
    echo ---------------------------
else
    if [ ! -e "cxxflags.txt" ]
        then
            if [ ! -e "cxx_flags" ]
                then
                    wget https://github.com/quarkscript/Simple_func_scripts/raw/master/cxx_flags
                    chmod +x cxx_flags
            fi
            ./cxx_flags
    fi
    
    cp cpu.patch localcpu.patch
    count=0
    for k in $(cat cxxflags.txt | sed -e 's/--param//g')
        do
            if [ "$count" -eq "0" ]
                then
                    enabl="$k "
                    call_cc="$""(call cc-option,$k"
                    for i in core2 nehalem westmere silvermont sandybridge ivybridge haswell broadwell skylake k8-sse3 amdfam10 barcelona btver1 bdver1 bdver2 bdver3 btver2
                        do
                            if (grep $i cxxflags.txt -q) 
                                then
                                    arrch=$i
                            fi
                            done
                else
                    if $(echo $k | grep cache -q)
                        then 
                            enabl+="--param $k "
                            call_cc+=",$""(call cc-option,--param $k)"
                        else
                            enabl+="$k "
                            call_cc+=",$""(call cc-option,$k)"
                    fi
                fi
                count=$(($count+1))
    done
    call_cc+=")"

    if [ -z $arrch ]
        then
        echo -----------------------------------------------------
        echo CPU type is undetected, tuning of cpu.patch
        echo is not possible for now. It is better to use native
        echo or generic optimizations '('do not forget to patch
        echo kernel source with original cpu.patch')'
        echo -----------------------------------------------------
        rm -f localcpu.patch
    else
        p_t='Enables -march='$arrch
        l_n=$(grep -n "$p_t" localcpu.patch | sed -e 's/:.*//g')
        head -n $(($l_n-1)) localcpu.patch >patch.patch
        echo "+	  Enables "$enabl>>patch.patch
        tail -n +$(($l_n+1)) localcpu.patch >>patch.patch
        rm -f localcpu.patch
        cp -f patch.patch localcpu.patch
        rm -f patch.patch
        p_t='$(call cc-option,-march='$arrch',$(call cc-option,-mtune='$arrch'))'
        l_n=$(grep -n "$p_t" localcpu.patch | sed -e 's/:.*//g')
        head -n $(($l_n-1)) localcpu.patch >patch.patch
        echo "+        "$call_cc>>patch.patch
        tail -n +$(($l_n+1)) localcpu.patch >>patch.patch
        rm -f localcpu.patch
        cp -f patch.patch localcpu.patch
        rm -f patch.patch
        echo -----------------------------------------------------
        echo Linux kernel can be better optimized to 
        echo CPU $(grep 'model name' /proc/cpuinfo --max-count=1)
        echo just patch kernel source with localcpu.patch and
        echo select '"'$arrch'"' CPU-family while configuring it
        echo -----------------------------------------------------
    fi
    if [ ! "$(sha512sum cpu.patch | sed -e 's/  cpu.patch//')" == "72e367fb955b203bbe35c870c4760a651fd79fa51a982b9f9c595bc5c6b2c41f34ba36f9a022ef17fc44550b4ccdd2046af46f1fd3e944592fdcae32157546a7" ]
        then
        echo cpu.patch is differ from the original cpu.patch
        echo Wrong source can leads to fails. Be aware
        echo 
    fi
    rm -f /tmp/hw_test.txt /tmp/capabilities.txt 
fi

